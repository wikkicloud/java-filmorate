CREATE TABLE IF NOT EXISTS "USER" (
	ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	NAME VARCHAR(200) NOT NULL,
	LOGIN VARCHAR(200) UNIQUE,
	EMAIL VARCHAR(200) UNIQUE,
	BIRTHDAY DATE
);

CREATE TABLE IF NOT EXISTS "RATING_MPA" (
	ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	NAME VARCHAR(200) NOT NULL
);

CREATE TABLE IF NOT EXISTS "FILM" (
	ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	NAME VARCHAR(200) UNIQUE,
	RELEASE_DATE DATE NOT NULL,
	DESCRIPTION CLOB NOT NULL,
	DURATION INTEGER NOT NULL,
	RATING_MPA_ID INTEGER REFERENCES RATING_MPA(ID)
);

CREATE TABLE IF NOT EXISTS "FRIEND" (
	USER_ID BIGINT REFERENCES USER(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	FRIEND_ID BIGINT REFERENCES USER(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	CONFIRMED BOOLEAN DEFAULT FALSE,
	PRIMARY KEY(USER_ID, FRIEND_ID)
);
CREATE TABLE IF NOT EXISTS "FILM_LIKE" (
	USER_ID BIGINT REFERENCES USER(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	FILM_ID BIGINT REFERENCES FILM(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY(USER_ID, FILM_ID)
);
CREATE TABLE IF NOT EXISTS "GENRE" (
	ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	NAME VARCHAR(200) NOT NULL
);
CREATE TABLE IF NOT EXISTS "FILM_GENRE" (
	FILM_ID BIGINT REFERENCES FILM(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	GENRE_ID INTEGER REFERENCES GENRE(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE INDEX IF NOT EXISTS USER_ID_IDX ON USER (ID);
CREATE INDEX IF NOT EXISTS FILM_ID_IDX ON FILM (ID);
